% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cp.R
\name{cp}
\alias{cp}
\alias{cp.cpr_bs}
\alias{cp.cpr_bt}
\alias{cp.formula}
\alias{plot.cpr_cp}
\alias{print.cpr_cp}
\title{Control Polygons}
\usage{
cp(x, ...)

\method{cp}{cpr_bs}(x, theta, ...)

\method{cp}{cpr_bt}(x, theta, ...)

\method{cp}{formula}(formula, data = parent.frame(), method = stats::lm,
  ...)

\method{print}{cpr_cp}(x, ...)

\method{plot}{cpr_cp}(x, ..., show_spline = FALSE, color = FALSE, n = 100)
}
\arguments{
\item{x}{a \code{cpr_bs} object}

\item{...}{arguments passed to the regression method}

\item{theta}{a vector of (regression) coefficients, the ordinates of the
control polygon.}

\item{formula}{a formula that is appropriate for regression method being
used.}

\item{data}{see documentation in \code{\link[stats]{lm}}}

\item{method}{the regression method such as \code{\link[stats]{lm}},
\code{\link[stats]{glm}}, \code{\link[lme4]{lmer}}, \code{\link[geepack]{geeglm}}, ...}

\item{show_spline}{boolean (default FALSE) to plot the spline function within
its control polygon}

\item{color}{boolean (default FALSE) if more than one \code{cpr_cp} object is
to be plotted, set this value to TRUE to have the graphic in color (linetypes
will be used regardless of the color settting).}

\item{n}{the number of data points to use for plotting the spline}
}
\description{
Generate the control polygon for a uni-variable B-spline
}
\details{
\code{cp} generates the control polygon for the given B-spline function.

\code{cpr} runs the control polygon reduction algorithm
}
\examples{

# Support
xvec <- seq(0, 6, length = 500)

# Define the basis matrix
bmat1 <- cpr::bsplines(x = xvec, iknots = c(1, 1.5, 2.3, 4, 4.5))
bmat2 <- cpr::bsplines(x = xvec)

# Define the control vertice ordinates
theta1 <- c(1, 0, 3.5, 4.2, 3.7, -0.5, -0.7, 2, 1.5)
theta2 <- c(1, 3.4, -2, 1.7)

# build the two control polygons
cp1 <- cp(bmat1, theta1)
cp2 <- cp(bmat2, theta2)

# black and white plot
plot(cp1)
plot(cp1, show_spline = TRUE)

# multiple control polygons
plot(cp1, cp2, show_spline = TRUE)
plot(cp1, cp2, color = TRUE)
plot(cp1, cp2, show_spline = TRUE, color = TRUE)

# via formula
dat <- dplyr::data_frame(x = xvec, y = sin((x - 2)/pi) + 1.4 * cos(x/pi))
cp3 <- cp(y ~ cpr::bsplines(x) + 0, data = dat)

# plot the control polygon, spline and traget data.
plot(cp3, show_spline = TRUE) + 
  ggplot2::geom_line(mapping = ggplot2::aes_string(x = "x", y = "y"), 
                     data = dat, linetype = 2, color = "red")

}

